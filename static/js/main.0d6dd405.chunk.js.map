{"version":3,"sources":["components/Phonebook/PhoneBook.module.css","components/PhonebookListItem/PhonebookListItem.module.css","components/UserMenu/UserMenu.module.css","components/HomePage/HomePage.module.css","components/AlertWindow/AlertWindow.module.css","stylesTransition/AlertTransition.module.css","stylesTransition/PhonebookListSlide.module.css","stylesTransition/PhoneFilter.module.css","stylesTransition/TitleSlideTransition.module.css","components/UserMenu/png-avatar.png","components/UserMenu/logout.png","App.module.css","routes.js","components/redux/TaskPhonebook.js","components/redux/ContactsOperatins/ContactsOperation.js","components/redux/Selectors/ContactSelectors.js","PublicRoute.js","PrivateRoute.js","components/RegisterForm/RegisterForm.js","components/LoginForm/LoginForm.js","components/HomePage/Homepage.js","components/Navigation/Navigation.js","components/AlertWindow/AlertWindow.js","components/Phonebook/PhonebookEditor.js","components/Filter/Filter.js","components/PhonebookListItem/PhoneBookListItem.js","components/Phonebook/Phonebook.js","components/UserMenu/UserMenu.js","App.js","components/redux/ContactsReducer/ContactsReducer.js","components/redux/ContactsReducer/AuthReducer.js","components/redux/store.js","index.js"],"names":["module","exports","home","login","register","contacts","logout","registerRequest","createAction","registersSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","addContactsRequest","addContactsSuccess","addContactsError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactsRequest","removeContactsSuccess","removeContactsError","changeFilter","Axios","defaults","baseURL","Token","token","headers","common","Authorization","registration","user","dispatch","TaskPhoneBook","post","then","response","data","catch","error","message","loginUser","getUser","getState","persistedtoken","auth","get","logOutUser","addContacts","name","number","fetchContacts","removeContact","id","delete","getActions","state","item","getFilter","filter","isAuthenticated","getUserName","getStatusLogIn","visibleContacts","createSelector","actions","contact","toLowerCase","includes","connect","getStatus","Component","component","restricted","routeProps","render","props","to","getstatus","RegisterForm","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","onRegister","this","Container","Row","className","Col","xs","lg","Form","type","Group","controlId","Label","Control","placeholder","onChange","suggested","autoComplete","Button","variant","onClick","ContactsOperatins","LoginForm","onLogin","ContactsOperation","Home","style","TitleHello","Description","logIn","exact","AlertWindow","styleAlert","Alert","AlertMessage","PhonebookEditor","alertName","find","element","setTimeout","alert","onFetchContacts","form","onSubmit","inputField","buttonAdd","CSSTransition","in","timeout","classNames","alertSlideTransition","unmountOnExit","MapDispatchToProps","ContactsOperations","ContactSelector","onChangeFilter","taskPhonebook","wrapperFilter","labelMarkup","PhonebookListItem","onRemovePersonData","key","listItem","dataPerson","buttonRemove","ContactOperations","Wrapper","appear","TitleSlideTransition","title","phoneList","TitleContacts","length","PhoneFilter","TransitionGroup","contactList","map","slideTransition","logOut","ContactSelectors","avatar","defaultAvatar","WrapperUserMenu","Avatar","src","width","height","alt","BlockName","ButtonLogOut","logOutButton","App","onGetUser","Navigation","fallback","path","routes","redirectTo","Phonebook","createReducer","TaskPhonebook","action","payload","combineReducers","initialUserState","_","authPersistConfig","storage","whitelist","store","configureStore","reducer","ContactsReducer","persistReducer","AuthReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.0d6dd405.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PhoneBook_wrapper__3ebn4\",\"title\":\"PhoneBook_title__Jx7g9\",\"TitleContacts\":\"PhoneBook_TitleContacts__2CqvS\",\"form\":\"PhoneBook_form__2VtG9\",\"buttonAdd\":\"PhoneBook_buttonAdd__29Q_P\",\"inputField\":\"PhoneBook_inputField__1Exqt\",\"wrapperFilter\":\"PhoneBook_wrapperFilter__5HAKY\",\"labelMarkup\":\"PhoneBook_labelMarkup__3hNeg\",\"phoneList\":\"PhoneBook_phoneList__17-15\",\"contactList\":\"PhoneBook_contactList__1mRXd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"PhonebookListItem_listItem__1Dcff\",\"dataPerson\":\"PhonebookListItem_dataPerson__2atkm\",\"buttonRemove\":\"PhonebookListItem_buttonRemove__3cOUs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WrapperUserMenu\":\"UserMenu_WrapperUserMenu__9gdTD\",\"BlockName\":\"UserMenu_BlockName__1TJjE\",\"ButtonLogOut\":\"UserMenu_ButtonLogOut__23BlY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TitleHello\":\"HomePage_TitleHello__Vi8NH\",\"Description\":\"HomePage_Description__A5aVu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Alert\":\"AlertWindow_Alert__3LMNE\",\"AlertMessage\":\"AlertWindow_AlertMessage__2c8xp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"AlertTransition_enter__2gRXU\",\"enterActive\":\"AlertTransition_enterActive__3WhJc\",\"exit\":\"AlertTransition_exit__q-U-p\",\"exitActive\":\"AlertTransition_exitActive__2xs59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"PhonebookListSlide_enter__1vwlB\",\"enterActive\":\"PhonebookListSlide_enterActive__3H--1\",\"exit\":\"PhonebookListSlide_exit__3wCDX\",\"exitActive\":\"PhonebookListSlide_exitActive__3eWaq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"PhoneFilter_enter__2Z3Pz\",\"enterActive\":\"PhoneFilter_enterActive__3cR6R\",\"exit\":\"PhoneFilter_exit__1DB02\",\"exitActive\":\"PhoneFilter_exitActive__3tn3R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"TitleSlideTransition_enter__25OyL\",\"appear\":\"TitleSlideTransition_appear__322EX\",\"enterActive\":\"TitleSlideTransition_enterActive__3fKRI\",\"appearActive\":\"TitleSlideTransition_appearActive__3_luR\",\"appearDone\":\"TitleSlideTransition_appearDone__1kL__\",\"exit\":\"TitleSlideTransition_exit__2lo-o\",\"exitActive\":\"TitleSlideTransition_exitActive__1-Kls\"};","module.exports = __webpack_public_path__ + \"static/media/png-avatar.54e9ec53.png\";","module.exports = __webpack_public_path__ + \"static/media/logout.3b704aed.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"App_Navigation__2vUK1\"};","export default {\r\n  home: \"/\",\r\n  login: \"/login\",\r\n  register: \"/registration\",\r\n  contacts: \"/contacts\",\r\n  logout: \"/logout\",\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nconst registerRequest = createAction(\"contacts/registerRequest\");\r\nconst registersSuccess = createAction(\"contacts/registerSuccess\");\r\nconst registerError = createAction(\"contacts/registerError\");\r\n\r\nconst loginRequest = createAction(\"contacts/loginRequest\");\r\nconst loginSuccess = createAction(\"contacts/loginSuccess\");\r\nconst loginError = createAction(\"contacts/loginError\");\r\n\r\nconst logoutRequest = createAction(\"contacts/outRequest\");\r\nconst logoutSuccess = createAction(\"contacts/outSuccess\");\r\nconst logoutError = createAction(\"contacts/outError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"contacts/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"contacts/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"contacts/getCurrentUserError\");\r\n\r\nconst addContactsRequest = createAction(\"contacts/addRequest\");\r\nconst addContactsSuccess = createAction(\"contacts/addSuccess\");\r\nconst addContactsError = createAction(\"contacts/addError\");\r\n\r\nconst fetchContactsRequest = createAction(\"contacts/fetchRequest\");\r\nconst fetchContactsSuccess = createAction(\"contacts/fetchSuccess\");\r\nconst fetchContactsError = createAction(\"contacts/fetchError\");\r\n\r\nconst removeContactsRequest = createAction(\"contacts/removeRequest\");\r\nconst removeContactsSuccess = createAction(\"contacts/removeSuccess\");\r\nconst removeContactsError = createAction(\"contacts/removeError\");\r\n\r\nconst changeFilter = createAction(\"contacts/filter\");\r\n\r\nexport default {\r\n  registerRequest,\r\n  registersSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n  changeFilter,\r\n};\r\n","import TaskPhoneBook from \"../TaskPhonebook\";\r\nimport Axios from \"axios\";\r\nAxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\nconst Token = (token) => {\r\n  Axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n};\r\nconst tokenUnset = () => {\r\n  Axios.defaults.headers.common.Authorization = \"\";\r\n};\r\n\r\nconst registration = (user) => (dispatch) => {\r\n  dispatch(TaskPhoneBook.registerRequest());\r\n  Axios.post(\"/users/signup\", user)\r\n    .then((response) => {\r\n      Token(response.data.token);\r\n      dispatch(TaskPhoneBook.loginSuccess(true));\r\n      dispatch(TaskPhoneBook.registersSuccess({ ...response.data }));\r\n    })\r\n    .catch((error) => dispatch(TaskPhoneBook.registerError(error.message)));\r\n};\r\n\r\nconst loginUser = (user) => (dispatch) => {\r\n  dispatch(TaskPhoneBook.loginRequest());\r\n  Axios.post(\"/users/login\", user)\r\n    .then((response) => {\r\n      Token(response.data.token);\r\n      dispatch(TaskPhoneBook.loginSuccess({ ...response.data }));\r\n    })\r\n    .catch((error) => dispatch(TaskPhoneBook.loginError(error.message)));\r\n};\r\n\r\nconst getUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedtoken },\r\n  } = getState();\r\n  if (!persistedtoken) {\r\n    return;\r\n  }\r\n  Token(persistedtoken);\r\n  dispatch(TaskPhoneBook.getCurrentUserRequest());\r\n\r\n  Axios.get(\"/users/current\")\r\n    .then(({ data }) => {\r\n      dispatch(TaskPhoneBook.getCurrentUserSuccess(data));\r\n    })\r\n    .catch((error) =>\r\n      dispatch(TaskPhoneBook.getCurrentUserError(error.message))\r\n    );\r\n};\r\n\r\nconst logOutUser = () => (dispatch) => {\r\n  dispatch(TaskPhoneBook.logoutRequest());\r\n  Axios.post(\"/users/logout\")\r\n    .then(() => {\r\n      tokenUnset();\r\n      dispatch(TaskPhoneBook.logoutSuccess());\r\n    })\r\n    .catch((error) => dispatch(TaskPhoneBook.logoutError(error.message)));\r\n};\r\n\r\nconst addContacts = (name, number) => (dispatch) => {\r\n  dispatch(TaskPhoneBook.addContactsRequest());\r\n  Axios.post(\"/contacts\", {\r\n    name,\r\n    number,\r\n  })\r\n    .then((response) =>\r\n      dispatch(TaskPhoneBook.addContactsSuccess(response.data))\r\n    )\r\n    .catch((error) => dispatch(TaskPhoneBook.addContactsError()));\r\n};\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(TaskPhoneBook.fetchContactsRequest());\r\n  Axios.get(\"/contacts\")\r\n    .then((response) =>\r\n      dispatch(TaskPhoneBook.fetchContactsSuccess(response.data))\r\n    )\r\n    .catch((error) => dispatch(TaskPhoneBook.fetchContactsError()));\r\n};\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(TaskPhoneBook.removeContactsRequest());\r\n  Axios.delete(`/contacts/${id}`)\r\n    .then(() => dispatch(TaskPhoneBook.removeContactsSuccess(id)))\r\n    .catch((error) => dispatch(TaskPhoneBook.removeContactsError()));\r\n};\r\n\r\nexport default {\r\n  registration,\r\n  loginUser,\r\n  getUser,\r\n  logOutUser,\r\n  addContacts,\r\n  fetchContacts,\r\n  removeContact,\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\nconst isAuthenticated = (state) => state.auth.token;\r\nconst getUserName = (state) => state.auth.user.name;\r\nconst getActions = (state) => state.contacts.item;\r\nconst getStatusLogIn = (state) => state.auth.loginUser;\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst visibleContacts = createSelector(\r\n  [getActions, getFilter],\r\n  (actions, filter) => {\r\n    return actions.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  isAuthenticated,\r\n  getActions,\r\n  getUserName,\r\n  getFilter,\r\n  getStatusLogIn,\r\n  visibleContacts,\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport getStatus from \"./components/redux/Selectors/ContactSelectors\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  restricted,\r\n  routeProps,\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated && restricted ? (\r\n        <Redirect to={\"/contacts\"} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getStatus.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(PublicRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport getstatus from \"./components/redux/Selectors/ContactSelectors\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={\"/login\"} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getstatus.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport ContactsOperatins from \"../redux/ContactsOperatins/ContactsOperation\";\r\nclass RegisterForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, email, password } = this.state;\r\n    const user = {\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    this.props.registerError(\"password is not valid\");\r\n    this.props.onRegister(user);\r\n    this.setState({ ...this.state });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n    return (\r\n      <Container>\r\n        <br />\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs lg=\"5\">\r\n            <h2>Регистрация</h2>\r\n            <Form type=\"form\">\r\n              <Form.Group controlId=\"firstName\">\r\n                <Form.Label>имя</Form.Label>\r\n                <Form.Control\r\n                  type=\"name\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  placeholder=\"Имя\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  suggested=\"email\"\r\n                  autoComplete=\"email\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  placeholder=\"введите email\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label>Пароль</Form.Label>\r\n                <Form.Control\r\n                  suggested=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  placeholder=\"пароль\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"button\"\r\n                onClick={this.handleSubmit}\r\n              >\r\n                РЕГИСТРАЦИЯ\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default connect(null, {\r\n  onRegister: ContactsOperatins.registration,\r\n})(RegisterForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactsOperation from \"../redux/ContactsOperatins/ContactsOperation\";\r\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass LoginForm extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = this.state;\r\n    const user = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n    this.props.onLogin(user);\r\n    this.setState({ ...this.state });\r\n  };\r\n\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <br />\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs lg=\"5\">\r\n            <h2>Ввойдите в ваш акаунт</h2>\r\n            <Form>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"введите email\"\r\n                  suggested=\"email\"\r\n                  name=\"email\"\r\n                  value={this.state.email}\r\n                  autoComplete=\"email\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>пароль</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"пароль\"\r\n                  suggested=\"password\"\r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  autoComplete=\"password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"button\"\r\n                onClick={this.handleSubmit}\r\n              >\r\n                Ввойти в акаунт\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default connect(null, {\r\n  onLogin: ContactsOperation.loginUser,\r\n})(LoginForm);\r\n","import React from \"react\";\r\nimport style from \"./HomePage.module.css\";\r\nexport const Home = () => (\r\n  <div>\r\n    <h2 className={style.TitleHello}>Здравствуйте!</h2>\r\n    <p className={style.Description}>\r\n      Здесь вы можете создать свою телефоную книгу, вести запись своих\r\n      контактных номеров. Также вы с легкостью сможете найти любой номер если их\r\n      станет очень много. Просто ввести имя в поисковой строке\r\n    </p>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport getStatusLogIn from \"../redux/Selectors/ContactSelectors\";\r\n\r\nconst Navigation = () => (\r\n  <>\r\n    <NavLink to=\"/\" exact>\r\n      Главная\r\n    </NavLink>\r\n    <br />\r\n    <NavLink to=\"/login\" exact>\r\n      LogIn\r\n    </NavLink>\r\n    <br />\r\n    <NavLink to=\"/registration\" exact>\r\n      Регистрация\r\n    </NavLink>\r\n    <br />\r\n    <NavLink to=\"/contacts\" exact>\r\n      Контакты\r\n    </NavLink>\r\n  </>\r\n);\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    logIn: getStatusLogIn.getStatusLogIn(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Navigation);\r\n","import React from \"react\";\r\nimport styleAlert from \"./AlertWindow.module.css\";\r\n\r\nconst AlertWindow = () => {\r\n  return (\r\n    <div className={styleAlert.Alert}>\r\n      <span className={styleAlert.AlertMessage}>\r\n        Номер с таким именем уже существует!\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport default AlertWindow;\r\n","import React, { Component } from \"react\";\r\nimport style from \"../Phonebook/PhoneBook.module.css\";\r\nimport alertSlideTransition from \"../../stylesTransition/AlertTransition.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactsOperations from \"../redux/ContactsOperatins/ContactsOperation\";\r\nimport ContactSelector from \"../redux/Selectors/ContactSelectors\";\r\nimport AlertWindow from \"../AlertWindow/AlertWindow\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nclass PhonebookEditor extends Component {\r\n  state = { name: \"\", number: \"\", alertName: null };\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchContacts();\r\n  }\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    const { addContacts, contacts } = this.props;\r\n\r\n    e.preventDefault();\r\n    if (\r\n      contacts.find(\r\n        (element) =>\r\n          element.name.toLowerCase() === this.state.name.toLowerCase()\r\n      )\r\n    ) {\r\n      this.setState({\r\n        alertName: true,\r\n      });\r\n      return setTimeout(() => {\r\n        this.setState({ alertName: null });\r\n      }, 3000);\r\n    }\r\n    if (this.state.name === \"\" || this.state.number === \"\") {\r\n      alert(\"Введите имя и номер!\");\r\n    } else {\r\n      addContacts(this.state.name, this.state.number);\r\n      this.setState({ name: \"\", number: \"\" });\r\n    }\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <div>\r\n          <form className={style.form} onSubmit={this.handleSubmit}>\r\n            <label>\r\n              Имя\r\n              <input\r\n                className={style.inputField}\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={this.handleChange}\r\n                name=\"name\"\r\n              />\r\n            </label>\r\n            <label>\r\n              Номер\r\n              <input\r\n                className={style.inputField}\r\n                type=\"text\"\r\n                value={number}\r\n                onChange={this.handleChange}\r\n                name=\"number\"\r\n              />\r\n            </label>\r\n\r\n            <button className={style.buttonAdd} type=\"submit\">\r\n              Добавить контакт\r\n            </button>\r\n          </form>\r\n          <div></div>\r\n        </div>\r\n        <CSSTransition\r\n          in={this.state.alertName}\r\n          timeout={250}\r\n          classNames={alertSlideTransition}\r\n          unmountOnExit\r\n        >\r\n          <AlertWindow />\r\n        </CSSTransition>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst MapStateToProps = (state) => ({\r\n  contacts: ContactSelector.visibleContacts(state),\r\n});\r\n\r\nconst MapDispatchToProps = {\r\n  addContacts: ContactsOperations.addContacts,\r\n  onFetchContacts: ContactsOperations.fetchContacts,\r\n};\r\nexport default connect(MapStateToProps, MapDispatchToProps)(PhonebookEditor);\r\n","import React from \"react\";\r\nimport style from \"../Phonebook/PhoneBook.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport taskPhonebook from \"../redux/TaskPhonebook\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <div className={style.wrapperFilter}>\r\n    <label className={style.labelMarkup}>\r\n      Найти номер\r\n      <input\r\n        className={style.inputField}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\nconst MapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\nconst MapDispatchToProps = {\r\n  onChangeFilter: taskPhonebook.changeFilter,\r\n};\r\nexport default connect(MapStateToProps, MapDispatchToProps)(Filter);\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\n\r\nimport style from \"./PhonebookListItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nconst PhonebookListItem = ({ id, name, number, onRemovePersonData }) => (\r\n  <div>\r\n    <li key={id} className={style.listItem}>\r\n      <span className={style.dataPerson}>{name}:</span>\r\n      <span className={style.dataPerson}>{number}</span>\r\n      <button className={style.buttonRemove} onClick={onRemovePersonData}>\r\n        ✕\r\n      </button>\r\n    </li>\r\n  </div>\r\n);\r\n\r\nexport default PhonebookListItem;\r\n\r\nPhonebookListItem.propTypes = {\r\n  id: PropTypes.string,\r\n  onRemovePersonData: PropTypes.func,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport style from \"./PhoneBook.module.css\";\r\nimport PhonebookEditor from \"./PhonebookEditor\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport PhonebookListItem from \"../PhonebookListItem/PhoneBookListItem\";\r\nimport slideTransition from \"../../stylesTransition/PhonebookListSlide.module.css\";\r\nimport PhoneFilter from \"../../stylesTransition/PhoneFilter.module.css\";\r\nimport TitleSlideTransition from \"../../stylesTransition/TitleSlideTransition.module.css\";\r\nimport ContactSelector from \"../redux/Selectors/ContactSelectors\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactOperations from \"../redux/ContactsOperatins/ContactsOperation\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nfunction Phonebook({ contacts, onRemovePersonData }) {\r\n  return (\r\n    <>\r\n      <div className={style.Wrapper}>\r\n        <CSSTransition\r\n          in\r\n          appear\r\n          timeout={1000}\r\n          classNames={TitleSlideTransition}\r\n          unmountOnExit\r\n        >\r\n          <h1 className={style.title}>Phonebook</h1>\r\n        </CSSTransition>\r\n      </div>\r\n      <div className={style.phoneList}>\r\n        <h2 className={style.TitleContacts}>Контакты</h2>\r\n\r\n        <PhonebookEditor />\r\n        {contacts.length > 0 ? (\r\n          <CSSTransition\r\n            in={contacts.length > 1}\r\n            timeout={250}\r\n            classNames={PhoneFilter}\r\n            unmountOnExit\r\n          >\r\n            <Filter />\r\n          </CSSTransition>\r\n        ) : (\r\n          <h2 className={style.TitleContacts}>Нет контактов</h2>\r\n        )}\r\n        <TransitionGroup component=\"ul\" className={style.contactList}>\r\n          {contacts.map((contact) => (\r\n            <CSSTransition\r\n              key={contact.id}\r\n              timeout={300}\r\n              classNames={slideTransition}\r\n            >\r\n              <PhonebookListItem\r\n                key={contact.id}\r\n                name={contact.name}\r\n                number={contact.number}\r\n                onRemovePersonData={() => onRemovePersonData(contact.id)}\r\n              />\r\n            </CSSTransition>\r\n          ))}\r\n        </TransitionGroup>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nconst MapStateToProps = (state) => ({\r\n  contacts: ContactSelector.visibleContacts(state),\r\n});\r\nconst MapDispatchToProps = {\r\n  onRemovePersonData: ContactOperations.removeContact,\r\n};\r\nexport default connect(MapStateToProps, MapDispatchToProps)(Phonebook);\r\n\r\nPhonebook.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onRemovePersonData: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactsOperation from \"../redux/ContactsOperatins/ContactsOperation\";\r\nimport ContactSelectors from \"../redux/Selectors/ContactSelectors\";\r\nimport defaultAvatar from \"./png-avatar.png\";\r\nimport logOutButton from \"./logout.png\";\r\nimport style from \"./UserMenu.module.css\";\r\nconst UserMenu = ({ avatar, logOut, name }) => (\r\n  <div className={style.WrapperUserMenu}>\r\n    <img\r\n      className={style.Avatar}\r\n      src={avatar}\r\n      width=\"40\"\r\n      height=\"40\"\r\n      alt=\"user-avatar\"\r\n    />\r\n    <span className={style.BlockName}>Добро пожаловать, {name}</span>\r\n    <button className={style.ButtonLogOut} type=\"button\" onClick={logOut}>\r\n      <img src={logOutButton} alt=\"logout button \" width=\"20\" />\r\n    </button>\r\n  </div>\r\n);\r\nconst mapStateToProps = (state) => ({\r\n  name: ContactSelectors.getUserName(state),\r\n  avatar: defaultAvatar,\r\n});\r\nconst MapDispatchToProps = {\r\n  logOut: ContactsOperation.logOutUser,\r\n};\r\nexport default connect(mapStateToProps, MapDispatchToProps)(UserMenu);\r\n","import React, { Component, Suspense } from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport routes from \"./routes\";\r\nimport ContactsOperations from \"./components/redux/ContactsOperatins/ContactsOperation\";\r\nimport ContactSelector from \"./components/redux/Selectors/ContactSelectors\";\r\nimport { connect } from \"react-redux\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport RegisterForm from \"./components/RegisterForm/RegisterForm\";\r\nimport LoginForm from \"./components/LoginForm/LoginForm\";\r\nimport { Home } from \"./components/HomePage/Homepage\";\r\nimport Navigation from \"./components/Navigation/Navigation\";\r\nimport Phonebook from \"./components/Phonebook/Phonebook\";\r\nimport UserMenu from \"./components/UserMenu/UserMenu\";\r\nimport style from \"./App.module.css\";\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetUser();\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={style.Navigation}>\r\n          <Navigation />\r\n          {this.props.isAuthenticated && <UserMenu />}\r\n        </div>\r\n        <Suspense fallback={<div>...Loading</div>}>\r\n          <Switch>\r\n            <PublicRoute\r\n              path={routes.home}\r\n              restricted={false}\r\n              exact\r\n              component={Home}\r\n            />\r\n            <PublicRoute\r\n              path={routes.login}\r\n              restricted={true}\r\n              redirectTo={routes.LoginForm}\r\n              component={LoginForm}\r\n            />\r\n            <PublicRoute\r\n              path={routes.register}\r\n              restricted={true}\r\n              redirectTo={routes.register}\r\n              component={RegisterForm}\r\n            />\r\n            <PrivateRoute\r\n              path={routes.contacts}\r\n              restricted={true}\r\n              redirectTo={routes.login}\r\n              component={Phonebook}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst MapStateToProps = (state) => ({\r\n  contacts: ContactSelector.visibleContacts(state),\r\n  isAuthenticated: ContactSelector.isAuthenticated(state),\r\n});\r\nconst MapDispatchToProps = {\r\n  onGetUser: ContactsOperations.getUser,\r\n};\r\n\r\nexport default connect(MapStateToProps, MapDispatchToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport TaskPhonebook from \"../TaskPhonebook\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst onAddContact = (state, action) => [...state, action.payload];\r\nconst onRemoveContact = (state, action) =>\r\n  state.filter((contact) => contact.id !== action.payload);\r\n\r\nconst item = createReducer([], {\r\n  [TaskPhonebook.fetchContactsSuccess]: (state, action) => action.payload,\r\n  [TaskPhonebook.addContactsSuccess]: onAddContact,\r\n  [TaskPhonebook.removeContactsSuccess]: onRemoveContact,\r\n});\r\n\r\nconst filter = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case TaskPhonebook.changeFilter.type:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ item, filter });\r\n","import { combineReducers } from \"redux\";\r\nimport TaskPhonebook from \"../TaskPhonebook\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nconst initialUserState = {\r\n  name: null,\r\n  email: null,\r\n};\r\nconst user = createReducer(initialUserState, {\r\n  [TaskPhonebook.registersSuccess]: (_, { payload }) => payload.user,\r\n  [TaskPhonebook.loginSuccess]: (_, { payload }) => payload.user,\r\n  [TaskPhonebook.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [TaskPhonebook.logoutSuccess]: () => initialUserState,\r\n});\r\nconst token = createReducer(null, {\r\n  [TaskPhonebook.registersSuccess]: (_, { payload }) => payload.token,\r\n  [TaskPhonebook.loginSuccess]: (_, { payload }) => payload.token,\r\n  [TaskPhonebook.logoutSuccess]: () => null,\r\n});\r\nconst error = createReducer(null, {\r\n  [TaskPhonebook.registerError]: (_, { payload }) => payload,\r\n  [TaskPhonebook.loginError]: (_, { payload }) => payload,\r\n  [TaskPhonebook.logoutError]: (_, { payload }) => payload,\r\n  [TaskPhonebook.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\nexport default combineReducers({ user, token, error });\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport ContactsReducer from \"./ContactsReducer/ContactsReducer\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport AuthReducer from \"./ContactsReducer/AuthReducer\";\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\", \"user\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: ContactsReducer,\r\n    auth: persistReducer(authPersistConfig, AuthReducer),\r\n  },\r\n  middleware: [\r\n    ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  ],\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./components/redux/store\";\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}